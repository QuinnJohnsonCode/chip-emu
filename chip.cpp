#include <iostream>
#include <cstdint>
#include <array>


class Font
{
    std::array<uint8_t, 5 * 16> sprites{{
        0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
        0x20, 0x60, 0x20, 0x20, 0x70, // 1
        0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
        0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
        0x90, 0x90, 0xF0, 0x10, 0x10, // 4
        0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
        0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
        0xF0, 0x10, 0x20, 0x40, 0x40, // 7
        0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
        0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
        0xF0, 0x90, 0xF0, 0x90, 0x90, // A
        0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
        0xF0, 0x80, 0x80, 0x80, 0xF0, // C
        0xE0, 0x90, 0x90, 0x90, 0xE0, // D
        0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
        0xF0, 0x80, 0xF0, 0x80, 0x80  // F
    }};
};

class Interpreter
{
public:
    // Registers
    uint16_t pc{};
    uint16_t index{};

    // General Variable Registers
    std::array<uint8_t, 16> registers{};

    // Stack
    std::array<uint16_t, 16> stack{};
    uint8_t sp{};

    // Memory
    std::array<uint8_t, 4096> memory{};
    
    // Timers
    uint8_t delay_timer{};
    uint8_t sound_timer{};

    // Screen (64 * 32 addressable pixels (0/1 monochrome))
    std::array<uint32_t, 64 * 32> display{};
};

int main()
{

    std::cout << "Hello\n";
    return 0;
}